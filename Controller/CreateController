using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System.Threading.Tasks;
using YourDbContextNamespace;

[Authorize(Roles = "Admin")]
public class SportsScheduleController : Controller
{
    private readonly YourDbContext _context;

    public SportsScheduleController(YourDbContext context)
    {
        _context = context;
    }

    // GET: Matches
    public async Task<IActionResult> Index()
    {
        return View(await _context.Matches.ToListAsync());
    }

    // GET: Matches/Create
    public IActionResult Create()
    {
        return View();
    }

    // POST: Matches/Create
    [HttpPost]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult> Create(Match match)
    {
        if (ModelState.IsValid)
        {
            _context.Add(match);
            await _context.SaveChangesAsync();
            return RedirectToAction(nameof(Index));
        }
        return View(match);
    }

    // GET: Matches/Edit/5
    public async Task<IActionResult> Edit(int? id)
    {
        if (id == null)
        {
            return NotFound();
        }

        var match = await _context.Matches.FindAsync(id);
        if (match == null)
        {
            return NotFound();
        }
        return View(match);
    }

    // POST: Matches/Edit/5
    [HttpPost]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult> Edit(int id, Match match)
    {
        if (id != match.Id)
        {
            return NotFound();
        }

        if (ModelState.IsValid)
        {
            _context.Update(match);
            await _context.SaveChangesAsync();
            return RedirectToAction(nameof(Index));
        }
        return View(match);
    }

    // GET: Matches/Delete/5
    public async Task<IActionResult> Delete(int? id)
    {
        if (id == null)
        {
            return NotFound();
        }

        var match = await _context.Matches
            .FirstOrDefaultAsync(m => m.Id == id);
        if (match == null)
        {
            return NotFound();
        }

        return View(match);
    }

    // POST: Matches/Delete/5
    [HttpPost, ActionName("Delete")]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult> DeleteConfirmed(int id)
    {
        var match = await _context.Matches.FindAsync(id);
        _context.Matches.Remove(match);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
}
